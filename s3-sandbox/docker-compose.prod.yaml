version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=zabbix
      - DB_PASSWORD=zabbix_password
      - DB_NAME=zabbix
      - GRAYLOG_HOST=graylog
    depends_on:
      - postgres
      - zabbix-agent
    networks:
      - sandbox-net

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_password
      POSTGRES_DB: zabbix
      PGDATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - sandbox-net

  adminer:
    image: 'adminer:latest'
    restart: 'always'
    ports:
      - '8083:8080'
    depends_on:
      - postgres
    environment:
      - 'ADMINER_DESIGN=hydra'
      - 'ADMINER_DEFAULT_SERVER=postgres'
    networks:
      - sandbox-net

#  graylog:
#    image: graylog/graylog:6.0
#    environment:
#      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
#      - GRAYLOG_ROOT_PASSWORD_SHA2=498cd025838863644a7761436a41527bab03d864c2b5e032db6f9d01a76e4db4
#      - GRAYLOG_PASSWORD_SECRET=zakatovigor88_secret
#      - GRAYLOG_ELASTICSEARCH_HOSTS=http://opensearch:9200
#      - GRAYLOG_MONGODB_URI=mongodb://mongo:27017/graylog
#    depends_on:
#      - mongo
#      - opensearch
#    networks:
#      - sandbox-net
#    ports:
#      - "1514:1514"
#      - "5555:5555"
#      - "9000:9000"
#      - "12201:12201/udp"
#      - "12201:12201"
#
#  mongo:
#    image: mongo
#    networks:
#      - sandbox-net
#
#  opensearch:
#    image: opensearchproject/opensearch:2.15.0
#    environment:
#      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
#      - "bootstrap.memory_lock=true"
#      - "discovery.type=single-node"
#      - "action.auto_create_index=false"
#      - "plugins.security.ssl.http.enabled=false"
#      - "plugins.security.disabled=true"
#      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Zakatov_igor88
#    networks:
#      - sandbox-net

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_URI: "postgres:5432/zabbix?sslmode=disable"
      DATA_SOURCE_USER: zabbix
      DATA_SOURCE_PASS: zabbix_password
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - sandbox-net

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - postgres_exporter
    networks:
      - sandbox-net

  grafana:
    image: grafana/grafana
    ports:
      - "8082:3000"
    networks:
      - sandbox-net

  zabbix-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_password
      POSTGRES_DB: zabbix
    networks:
      - sandbox-net

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:latest
    environment:
      DB_SERVER_HOST: zabbix-db
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_password
      DB_NAME: zabbix
      ZBX_STARTAGENTS: 5
    depends_on:
      - zabbix-db
    ports:
      - "10051:10051"
    networks:
      - sandbox-net

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:latest
    environment:
      DB_SERVER_HOST: zabbix-db
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_password
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: Europe/Moscow
    depends_on:
      - zabbix-server
    ports:
      - "8081:8080"
    networks:
      - sandbox-net

  zabbix-agent:
    image: zabbix/zabbix-agent:latest
    environment:
      ZBX_SERVER_HOST: zabbix-server
      ZBX_HOSTNAME: app
    ports:
      - "10050:10050"
    networks:
      - sandbox-net
    volumes:
      - /:/hostroot:ro

volumes:
  pgdata:

networks:
  sandbox-net:
